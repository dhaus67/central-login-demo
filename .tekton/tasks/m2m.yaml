apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: stackrox-image-check
  namespace: m2m-test
  labels:
    app.kubernetes.io/version: "0.1"
spec:
  description: |-
    Policy check an image with StackRox/RHACS
    This tasks allows you to check an image against build-time policies and apply enforcement to fail builds.  It's a companion to the stackrox-image-scan task, which returns full vulnerability scan results for an image.
  params:
    - description: |
        Secret containing the address:port tuple for StackRox Central)
        (example - rox.stackrox.io:443)
      name: rox_central_endpoint
      type: string
    - description: |
        Full name of image to scan (example -- gcr.io/rox/sample:5.0-rc1)
      name: image
      type: string
    - default: "false"
      description: |
        When set to `"true"`, skip verifying the TLS certs of the Central
        endpoint.  Defaults to `"false"`.
      name: insecure-skip-tls-verify
      type: string
  results:
    - description: Output of `roxctl image check`
      name: check_output
      type: string
  steps:
    - computeResources: {}
      env:
        - name: ROX_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: rox_central_endpoint
              name: $(params.rox_central_endpoint)
      image: "docker.io/centos@sha256:a1801b843b1bfaf77c501e7a6d3f709401a1e0c83863037fa3aab063a7fdb9dc"
      name: rox-image-check
      script: |
        #!/usr/bin/env bash
        set +x

        # Read out the ID token from the service account's projected volume.
        ID_TOKEN=$(cat /service-account-token/token)
        echo "Seding the ID token ${ID_TOKEN} to Central for exchanging"
        # Send the API request to exchange the ID token for a short-lived access token.
        export ROX_API_TOKEN=$(curl -k https://$ROX_ENDPOINT/v1/auth/m2m/exchange -d '{"idToken": "'"${ID_TOKEN}"'"}' | grep -o '"accessToken":"[^"]*' | grep -o '[^"]*$')

        echo "Got an API token ${ROX_API_TOKEN} from Central"

        curl -s -k -L -H "Authorization: Bearer $ROX_API_TOKEN" \
          "https://$ROX_ENDPOINT/api/cli/download/roxctl-linux" \
          --output ./roxctl  \
          > /dev/null
        chmod +x ./roxctl  > /dev/null
        ./roxctl image check \
          $( [ "$(params.insecure-skip-tls-verify)" = "true" ] && \
          echo -n "--insecure-skip-tls-verify") \
          --image "$(params.image)"
      volumeMounts:
        - mountPath: /service-account-token
          name: token-vol
          readOnly: true
  volumes:
    - name: token-vol
      projected:
        sources:
          - serviceAccountToken:
              audience: api
              expirationSeconds: 3600
              path: token
